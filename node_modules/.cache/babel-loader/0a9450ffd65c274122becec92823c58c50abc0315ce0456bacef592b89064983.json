{"ast":null,"code":"import { observeElementRect, observeElementOffset, elementScroll, observeWindowRect, observeWindowOffset, windowScroll, Virtualizer } from \"@tanstack/virtual-core\";\nexport * from \"@tanstack/virtual-core\";\nimport { computed, unref, shallowRef, watch, triggerRef, onScopeDispose } from \"vue\";\nfunction useVirtualizerBase(options) {\n  const virtualizer = new Virtualizer(unref(options));\n  const state = shallowRef(virtualizer);\n  const cleanup = virtualizer._didMount();\n  watch(() => unref(options).getScrollElement(), el => {\n    if (el) {\n      virtualizer._willUpdate();\n    }\n  }, {\n    immediate: true\n  });\n  watch(() => unref(options), options2 => {\n    virtualizer.setOptions({\n      ...options2,\n      onChange: (instance, sync) => {\n        var _a;\n        triggerRef(state);\n        (_a = options2.onChange) == null ? void 0 : _a.call(options2, instance, sync);\n      }\n    });\n    virtualizer._willUpdate();\n    triggerRef(state);\n  }, {\n    immediate: true\n  });\n  onScopeDispose(cleanup);\n  return state;\n}\nfunction useVirtualizer(options) {\n  return useVirtualizerBase(computed(() => ({\n    observeElementRect,\n    observeElementOffset,\n    scrollToFn: elementScroll,\n    ...unref(options)\n  })));\n}\nfunction useWindowVirtualizer(options) {\n  return useVirtualizerBase(computed(() => ({\n    getScrollElement: () => typeof document !== \"undefined\" ? window : null,\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    initialOffset: () => typeof document !== \"undefined\" ? window.scrollY : 0,\n    ...unref(options)\n  })));\n}\nexport { useVirtualizer, useWindowVirtualizer };","map":{"version":3,"names":["useVirtualizerBase","options","virtualizer","Virtualizer","unref","state","shallowRef","cleanup","_didMount","watch","getScrollElement","el","_willUpdate","immediate","options2","setOptions","onChange","instance","sync","triggerRef","_a","call","onScopeDispose","useVirtualizer","computed","observeElementRect","observeElementOffset","scrollToFn","elementScroll","useWindowVirtualizer","document","window","observeWindowRect","observeWindowOffset","windowScroll","initialOffset","scrollY"],"sources":["../../src/index.ts"],"sourcesContent":["import {\n  Virtualizer,\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  windowScroll,\n} from '@tanstack/virtual-core'\nimport {\n  computed,\n  onScopeDispose,\n  shallowRef,\n  triggerRef,\n  unref,\n  watch,\n} from 'vue'\nimport type { PartialKeys, VirtualizerOptions } from '@tanstack/virtual-core'\nimport type { Ref } from 'vue'\n\nexport * from '@tanstack/virtual-core'\n\ntype MaybeRef<T> = T | Ref<T>\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: MaybeRef<VirtualizerOptions<TScrollElement, TItemElement>>,\n): Ref<Virtualizer<TScrollElement, TItemElement>> {\n  const virtualizer = new Virtualizer(unref(options))\n  const state = shallowRef(virtualizer)\n\n  const cleanup = virtualizer._didMount()\n\n  watch(\n    () => unref(options).getScrollElement(),\n    (el) => {\n      if (el) {\n        virtualizer._willUpdate()\n      }\n    },\n    {\n      immediate: true,\n    },\n  )\n\n  watch(\n    () => unref(options),\n    (options) => {\n      virtualizer.setOptions({\n        ...options,\n        onChange: (instance, sync) => {\n          triggerRef(state)\n          options.onChange?.(instance, sync)\n        },\n      })\n\n      virtualizer._willUpdate()\n      triggerRef(state)\n    },\n    {\n      immediate: true,\n    },\n  )\n\n  onScopeDispose(cleanup)\n\n  return state\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: MaybeRef<\n    PartialKeys<\n      VirtualizerOptions<TScrollElement, TItemElement>,\n      'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n    >\n  >,\n): Ref<Virtualizer<TScrollElement, TItemElement>> {\n  return useVirtualizerBase<TScrollElement, TItemElement>(\n    computed(() => ({\n      observeElementRect: observeElementRect,\n      observeElementOffset: observeElementOffset,\n      scrollToFn: elementScroll,\n      ...unref(options),\n    })),\n  )\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: MaybeRef<\n    PartialKeys<\n      VirtualizerOptions<Window, TItemElement>,\n      | 'observeElementRect'\n      | 'observeElementOffset'\n      | 'scrollToFn'\n      | 'getScrollElement'\n    >\n  >,\n): Ref<Virtualizer<Window, TItemElement>> {\n  return useVirtualizerBase<Window, TItemElement>(\n    computed(() => ({\n      getScrollElement: () => (typeof document !== 'undefined' ? window : null),\n      observeElementRect: observeWindowRect,\n      observeElementOffset: observeWindowOffset,\n      scrollToFn: windowScroll,\n      initialOffset: () =>\n        typeof document !== 'undefined' ? window.scrollY : 0,\n      ...unref(options),\n    })),\n  )\n}\n"],"mappings":";;;AAwBA,SAASA,mBAIPC,OAAA,EACgD;EAChD,MAAMC,WAAA,GAAc,IAAIC,WAAA,CAAYC,KAAA,CAAMH,OAAO,CAAC;EAC5C,MAAAI,KAAA,GAAQC,UAAA,CAAWJ,WAAW;EAE9B,MAAAK,OAAA,GAAUL,WAAA,CAAYM,SAAA,CAAU;EAEtCC,KAAA,CACE,MAAML,KAAA,CAAMH,OAAO,EAAES,gBAAA,CAAiB,GACrCC,EAAA,IAAO;IACN,IAAIA,EAAA,EAAI;MACNT,WAAA,CAAYU,WAAA,CAAY;IAAA;EAE5B,GACA;IACEC,SAAA,EAAW;EAAA,CAEf;EAEAJ,KAAA,CACE,MAAML,KAAA,CAAMH,OAAO,GAClBa,QAAA,IAAY;IACXZ,WAAA,CAAYa,UAAA,CAAW;MACrB,GAAGD,QAAA;MACHE,QAAA,EAAUA,CAACC,QAAA,EAAUC,IAAA,KAAS;;QAC5BC,UAAA,CAAWd,KAAK;QAChB,CAAAe,EAAA,GAAAN,QAAA,CAAQE,QAAA,KAAR,gBAAAI,EAAA,CAAAC,IAAA,CAAAP,QAAA,EAAmBG,QAAA,EAAUC,IAAA;MAAI;IACnC,CACD;IAEDhB,WAAA,CAAYU,WAAA,CAAY;IACxBO,UAAA,CAAWd,KAAK;EAClB,GACA;IACEQ,SAAA,EAAW;EAAA,CAEf;EAEAS,cAAA,CAAef,OAAO;EAEf,OAAAF,KAAA;AACT;AAEO,SAASkB,eAIdtB,OAAA,EAMgD;EACzC,OAAAD,kBAAA,CACLwB,QAAA,CAAS,OAAO;IACdC,kBAAA;IACAC,oBAAA;IACAC,UAAA,EAAYC,aAAA;IACZ,GAAGxB,KAAA,CAAMH,OAAO;EAAA,EAChB,CACJ;AACF;AAEO,SAAS4B,qBACd5B,OAAA,EASwC;EACjC,OAAAD,kBAAA,CACLwB,QAAA,CAAS,OAAO;IACdd,gBAAA,EAAkBA,CAAA,KAAO,OAAOoB,QAAA,KAAa,cAAcC,MAAA,GAAS;IACpEN,kBAAA,EAAoBO,iBAAA;IACpBN,oBAAA,EAAsBO,mBAAA;IACtBN,UAAA,EAAYO,YAAA;IACZC,aAAA,EAAeA,CAAA,KACb,OAAOL,QAAA,KAAa,cAAcC,MAAA,CAAOK,OAAA,GAAU;IACrD,GAAGhC,KAAA,CAAMH,OAAO;EAAA,EAChB,CACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}